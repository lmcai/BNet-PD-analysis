plot(x$V2,type='s',xlab = "51-mer frequency",ylab = "distinct 51-mers",main = "51-mer spectra for: Tetrastigma KAPA short reads",cex.main=0.8,xlim = c(0,100))
plot(x$V2,type='s',xlab = "51-mer frequency",ylab = "distinct 51-mers",main = "51-mer spectra for: Tetrastigma KAPA short reads",cex.main=0.8,xlim = c(0,50))
plot(x$V2,type='s',xlab = "51-mer frequency",ylab = "distinct 51-mers",main = "51-mer spectra for: Tetrastigma KAPA short reads",cex.main=0.8,xlim = c(0,50),ylim = =c(0,1e8))
plot(x$V2,type='s',xlab = "51-mer frequency",ylab = "distinct 51-mers",main = "51-mer spectra for: Tetrastigma KAPA short reads",cex.main=0.8,xlim = c(0,50),ylim = c(0,1e8))
plot(x$V2,type='s',xlab = "51-mer frequency",ylab = "distinct 51-mers",main = "51-mer spectra for: Tetrastigma KAPA short reads",cex.main=0.8,xlim = c(0,100),ylim = c(0,1e8))
sum(as.numeric(x[10:65534,1]*x[10:65534,2]))/(21+44)
sum(as.numeric(x[10:65534,1]*x[10:65534,2]))/(10.5+44)
sum(as.numeric(x[10:65534,1]*x[10:65534,2]))/(10.5+47)
x=read.table('~/Downloads/test.txt')
plot(x$V2,type = 'l')
x=read.table('~/Downloads/test.txt')
plot(x$V2,type='l')
plot(x$V2,type='l',ylim = c(0,7e6))
plot(x$V2,type='l',ylim = c(0,7e7))
plot(x$V2,type='l',ylim = c(0,4e7))
install.packages("ggtree")
x=read.table('~/Downloads/test.txt')
View(x)
plot(x$V2,type = 's',ylim=c(0,1e8),xlim=c(0,100),xlab = "15-mer frequency",ylab = "distinct 15-mers",main = "15-mer spectra for: Illumina Tetrastigma",cex.main=0.8)
plot(x$V2,type = 's',ylim=c(0,2e7),xlim=c(0,100),xlab = "15-mer frequency",ylab = "distinct 15-mers",main = "15-mer spectra for: Illumina Tetrastigma",cex.main=0.8)
plot(x$V2,type = 's',ylim=c(0,5e6),xlim=c(0,100),xlab = "15-mer frequency",ylab = "distinct 15-mers",main = "15-mer spectra for: Illumina Tetrastigma",cex.main=0.8)
install.packages("reshape")
library(ggplot2)
library("reshape")
x=read.table(' /Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/RAxML_RF-Distances.ExonIntron')
x=read.table('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/RAxML_RF-Distances.ExonIntron')
View(x)
y=read.table('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/RAxML_RF-Distances.Softtrimed')
z=read.table('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/RAxML_RF-Distances.Mostconserved')
a=cbind(z$V4,y$V4,x$V4)
mm <- melt(a)
p <- ggplot(mm, aes(x=variable, y=value, fill=variable)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
View(mm)
View(x)
View(a)
mm <- melt(x$V4)
View(mm)
mm <- melt(x$V3)
a=cbind(z$3,x$V3)
a=cbind(z$V3,x$V3)
View(a)
mm <- melt(a)
View(mm)
p <- ggplot(mm, aes(x=variable, y=value, fill=variable)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
p <- ggplot(mm, aes(x=X2, y=value, fill=variable)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
p <- ggplot(mm, aes(x=X2, y=value, fill=X2)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
x=read.csv('../FigS2a_GeneTrBP_SiteSubsample.csv')
x=read.csv('../../FigS2a_GeneTrBP_SiteSubsample.csv')
x=read.csv('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2//FigS2a_GeneTrBP_SiteSubsample.csv')
mm <- melt(x)
x=read.table('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/RAxML_RF-Distances.ExonIntron')
boxplot(x$V3,y$V3,z$V3)
boxplot(z$V3,y$V3,x$V3)
boxplot(z$V3,y$V3,x$V3,xlab='Species tree discordance',ylab='Pairwise RF distance')
a=read.csv('/Users/lcai/Dropbox/Cai_etal_2018_malpighiales_ILS/Bookkeeping/FigS2/FigS2d_RFdistance_flankingregion/FigS2d_pairwiseRF.csv')
View(a)
mm <- melt(a)
View(mm)
p <- ggplot(mm, aes(x=X2, y=value, fill=X2)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
p <- ggplot(mm, aes(x=variable, y=value, fill=variable)) +
geom_violin(fill='gray')+
labs(x="Species tree discordance", y = "Pairwise RF distance")
p + geom_boxplot(width=0.1,fill='white') + theme_classic()
ggsave("~/Desktop/FigS2d.pdf", width = 2.5, height = 2.5)
q()
install.packages("phytools")
library(phytools)
tree=read.tree(text='((((((((((Sap:83.638900,(Jat:49.405722,Mes:49.405722):34.233179):2.033813,Ptr:85.672713):13.603811,((Ath:89.560313,Gos:89.560313):6.439687,Cit:96.000000):3.276524):4.085367,(Gly:92.693460,Pru:92.693460):10.668432):6.261996,Vvi:109.623888):3.315787,((((Cof:86.152907,((Ipo:39.204773,Cus:39.204773):32.747671,(Nic:22.593687,Sol:22.593687):49.358757):14.200463):3.643976,(((Han:46.110747,(Mim:43.139598,(Pht:34.452780,Str:34.452780):8.686818):2.971149):1.690287,Ses:47.801035):21.822753,Ole:69.623788):20.173095):10.752537,(Dau:90.511140,Hel:90.511140):10.038280):4.608575,Act:105.157995):7.781679):12.949427,Nel:125.889102):3.720799,Aqu:129.609901):20.571711,Osa:150.181612):43.818388,Amb:194.000000);')
x<-as.matrix(read.csv("/Users/lcai/Dropbox/Sapria/HGT/HGT.phylo_frequency",row.names=1))[,1]
x<-as.matrix(read.table("/Users/lcai/Dropbox/Sapria/HGT/HGT.phylo_frequency",row.names=1))[,1]
dotTree(tree,x,length=10,ftype="i")
x[0:1]
x=read.table('~/Dropbox/Sapria/VGT.stem_crown_br_len_distr.tsv',sep = '\t',header = T)
plot(x$stem_gr_len,x$stem_gr_len=x$crown2sap_len)
plot(x$stem_gr_len,x$stem_gr_len+x$crown2sap_len)
plot(x$stem_gr_len,x$stem_gr_len+x$crown2sap_len,pch=20,cex=0.4)
plot(x$stem_gr_len,x$stem_gr_len+x$crown2sap_len,pch=20,cex=0.4,xlim = c(0,4),ylim = c(0,8))
plot(x$stem_gr_len,x$stem_gr_len+x$crown2sap_len,pch=20,cex=0.4,xlim = c(0,2),ylim = c(0,4))
plot(x$stem_gr_len,x$stem_gr_len+x$crown2raf_len,pch=20,cex=0.4,xlim = c(0,2),ylim = c(0,4))
hist(x$stem_gr_len/x$crown2raf_len)
hist(x$stem_gr_len/x$crown2raf_len,xlim = c(0,10))
a=x$stem_gr_len/x$crown2raf_len
a=a[a<10]
hist(a)
hist(a,breaks=30)
hist(a,breaks=50)
median(a[a<1.2])
115/(1.48)
95/(1.48)
a=x$stem_gr_len/x$crown2rhi_len
a=a[a<10]
hist(a)
hist(a,breaks=50)
median(a[a<1.2])
abline(x=y,col='red')
abline(xa=0,b=1,col='red')
abline(a=0,b=1,col='red')
abline(a=0,b=2,col='red')
abline(a=0.5,b=2,col='red')
abline(a=0.5,b=1.5,col='red')
abline(a=0.5,b=1.2,col='red')
z=x[(x$stem_gr_len+x$crown2raf_len)>x$stem_gr_len*1.2+0.5 & x$stem_gr_len>0.25,]
write.csv(z,'test.csv')
plot(x$stem_gr_len,x$stem_gr_len+x$crown2sap_len,pch=20,cex=0.4,xlim = c(0,2),ylim = c(0,4))
abline(a=0.8,b=1.2,col='red')
abline(a=0.8,b=1.1,col='red')
abline(a=0.8,b=1,col='red')
abline(a=0.7,b=1,col='red')
z1=x[(x$stem_gr_len+x$crown2sap_len)>x$stem_gr_len*1+0.7 & x$stem_gr_len>0.25,]
write.csv(z,'sap.relaxed.csv')
write.csv(z1,'sap.relaxed.csv')
plot(x$stem_gr_len,x$stem_gr_len+x$crown2rhi_len,pch=20,cex=0.4,xlim = c(0,2),ylim = c(0,4))
abline(a=0.7,b=1,col='red')
abline(a=0.5,b=1,col='red')
abline(a=0.5,b=1.2,col='red')
z2=x[(x$stem_gr_len+x$crown2rhi_len)>x$stem_gr_len*1.2+0.5 & x$stem_gr_len>0.25,]
write.csv(z2,'rhi.relaxed.csv')
q()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DOSE")
library(dose)
library(DOSE)
data(geneList)
de <- names(geneList)[abs(geneList) > 2]
edo <- enrichDGN(de)
p1 <- emapplot(edo)
p2 <- emapplot(edo, pie_scale=1.5)
p3 <- emapplot(edo,layout="kk")
p4 <- emapplot(edo, pie_scale=1.5,layout="kk")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("enrichplot")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("enrichplot")
install.packages("ggrepel")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
install.packages("ggrepel")
library(clusterProfiler)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("enrichplot")
library(enrichplot)
p1 <- emapplot(edo)
p2 <- emapplot(edo, pie_scale=1.5)
p3 <- emapplot(edo,layout="kk")
p4 <- emapplot(edo, pie_scale=1.5,layout="kk")
View(p2)
cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])
cowplot::plot_grid(p1)
View(edo)
browseVignettes("clusterProfiler")
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
a=read.csv('~/Dropbox/Sapria/Gene loss/ShinyGO_and_PlantRegMap/Ath.orthofinderLoss.txt')
a=read.csv('~/Dropbox/Sapria/Gene loss/ShinyGO_and_PlantRegMap/Ath.orthofinderLoss.txt',header = F)
gene=as.vector(a$V1)
b=read.csv('~/Dropbox/Sapria/Gene loss/ShinyGO_and_PlantRegMap/Ath.orthofinderBackground.txt',header = F)
backgr=as.vector(b$V1)
?enrichGO
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db, ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable      = TRUE)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb ='org.At.tair.db', ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable      = TRUE)
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.At.eg.db")
version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.At.tair.db")
gene=as.vector(a$V1)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db, ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable= TRUE)
library(org.At.tair.db)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db, ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable= TRUE)
ego
groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T)
?groupGO
groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T,keyType = 'ENSEMBL')
groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T,keyType = 'UNIPROT')
groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T,keyType = 'ENTREZID')
keytypes(org.At.tair.db)
groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T,keyType = 'TAIR')
ggo<-groupGO(gene = gene,OrgDb    = org.At.tair.db, ont      = "CC",level=3,readable = T,keyType = 'TAIR')
ggo
head(ggo)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keytype='TAIR', ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable= TRUE)
?enrichGO
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keyType='TAIR', ont='ALL', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable= TRUE)
head(ego)
library(enrichplot)
barplot(ego, showCategory=20)
dotplot(ego,showCategory=30)
egox <- setReadable(ego, 'org.At.tair.db', 'TAIR')
cnetplot(egox, categorySize="pvalue")
emapplot(ego)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keyType='TAIR', ont='BP', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable= TRUE)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keyType='TAIR', ont='BP', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.01,readable= TRUE)
emapplot(ego)
View(ego)
emapplot(ego,layout = 'kk')
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keyType='TAIR', ont='BP', pAdjustMethod = "BH",pvalueCutoff  = 0.05,qvalueCutoff  = 0.05,readable= TRUE)
emapplot(ego,layout = 'kk')
emapplot(ego,layout = 'kk',showCategory = 100)
emapplot(ego,layout = 'kk',showCategory = 500)
ego <- enrichGO(gene=gene,universe=backgr,OrgDb =org.At.tair.db,keyType='TAIR', ont='BP', pAdjustMethod = "BH",pvalueCutoff  = 0.01,qvalueCutoff  = 0.01,readable= TRUE)
emapplot(ego,layout = 'kk',showCategory = 500)
?emapplot
emapplot(ego,layout = 'kk',showCategory = 500, pie_scale=1)
emapplot(ego,layout = 'kk',showCategory = 500, pie_scale=0.7)
pdf('test.pdf',width = 10,height = 12)
emapplot(ego,layout = 'kk',showCategory = 500, pie_scale=0.7)
dev.off()
pdf('test.pdf',width = 20,height = 24)
emapplot(ego,layout = 'kk',showCategory = 500, pie_scale=0.7)
dev.off()
ego_reduced <- simplify(ego, cutoff=0.7, by="p.adjust", select_fun=min)
emapplot(ego,layout = 'kk',showCategory = 500, pie_scale=0.7)
ego_reduced <- simplify(ego, cutoff=0.5, by="p.adjust", select_fun=min)
x=read.csv('~/Downloads/rnd1.cds2genome.intron',header = F
)
plot(density(log(x$V1,10)))
x=read.csv('~/Downloads/rnd1_rerun.est2genome.intron',header = F
)
plot(density(log(x$V1,10)))
library(phybase)
install.packages("phybase")
library(ape)
y=read.tree('~/Dropbox/ExaML_result.final3.ML')
z=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/ID_Sp.csv')
z$ID=as.character(z$ID)
u=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/malpighiaceaedatabaseexports/Malpighiaceae_DNA_Liming.csv',header=F)
for (i in 1:length(y$tip.label)){
a=0
b=list()
a=strsplit(y$tip.label[i],'[.]')
b=which(z$ID==a[[1]][1])
if (length(b)>0){
y$tip.label[i]=paste(z$genus[b],z$sp[b],y$tip.label[i],sep='_')
}else{
b=which(u$V1==a[[1]][1])
y$tip.label[i]=paste(u$V2[b],u$V3[b],y$tip.label[i],sep='_')
}
}
write.tree(y,'~/Downloads/ITS.final3.spname.tre')
y=read.tree('~/Dropbox/ExaML_result.final3.ML')
z=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/ID_Sp.csv')
z$ID=as.character(z$ID)
u=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/malpighiaceaedatabaseexports/Malpighiaceae_DNA_Liming.csv',header=F)
for (i in 1:length(y$tip.label)){
a=0
b=list()
a=strsplit(y$tip.label[i],'[.]')
b=which(z$ID==a[[1]][1])
if (length(b)>0){
y$tip.label[i]=paste(z$genus[b],z$sp[b],y$tip.label[i],sep='_')
}else{
b=which(u$V1==a[[1]][1])
y$tip.label[i]=paste(u$V2[b],u$V3[b],y$tip.label[i],sep='_')
}
}
write.tree(y,'~/Downloads/ITS.final3_rnd2.spname.tre')
y=read.tree('~/Dropbox/Malpighiaceae_plastome_phylogeny/ITS/final3.rnd2.35S_ETS.lib12_nopolyphyletic.ordered.elatinaceae.partition.treefile')
z=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/ID_Sp.csv')
z$ID=as.character(z$ID)
u=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/malpighiaceaedatabaseexports/Malpighiaceae_DNA_Liming.csv',header=F)
for (i in 1:length(y$tip.label)){
a=0
b=list()
a=strsplit(y$tip.label[i],'[.]')
b=which(z$ID==a[[1]][1])
if (length(b)>0){
y$tip.label[i]=paste(z$genus[b],z$sp[b],y$tip.label[i],sep='_')
}else{
b=which(u$V1==a[[1]][1])
y$tip.label[i]=paste(u$V2[b],u$V3[b],y$tip.label[i],sep='_')
}
}
write.tree(y,'ITS.final3.spname.tre')
y=read.tree('~/Dropbox/Malpighiaceae_plastome_phylogeny/ITS/final3.rnd2.35S_ETS.lib12_nopolyphyletic.ordered.elatinaceae.partition.treefile')
z=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/ID_Sp.csv')
z$ID=as.character(z$ID)
u=read.csv('/Users/lcai/Downloads/Malpighiaceae_Chl/malpighiaceaedatabaseexports/Malpighiaceae_DNA_Liming.csv',header=F)
for (i in 1:length(y$tip.label)){
a=0
b=list()
a=strsplit(y$tip.label[i],'[.]')
b=which(z$ID==a[[1]][1])
if (length(b)>0){
y$tip.label[i]=paste(z$genus[b],z$sp[b],y$tip.label[i],sep='_')
}else{
b=which(u$V1==a[[1]][1])
y$tip.label[i]=paste(u$V2[b],u$V3[b],y$tip.label[i],sep='_')
}
}
write.tree(y,'~/Downloads/ITS.final3_rnd3.spname.tre')
64*63*62*61/2/3/4
64*63*62/2/3
q()
0.05/30856
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("IRanges")
devtools::install_github("vanOosterhoutLab/HybridCheck", build_vignettes = TRUE)
BiocManager::install("Biostrings")
devtools::install_github("vanOosterhoutLab/HybridCheck", build_vignettes = TRUE)
R
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
library(ape)
x=read.nexus('~/Downloads/RESULT.labeled.tre.figtree.nex')
plot(x)
plot(x,show.node.label = T)
plot(x,show.node.label = T,use.edge.length = F)
setwd('Documents/GitHub/BNet-PD-analysis/')
x=read.csv('Hosts_genus_revised_Sep2.csv')
setwd('BNet_PD_analysis/')
x=read.csv('Hosts_genus_revised_Sep2.csv')
y=read.table('Hosts_families4picante_null.tsv',header=T,sep='\t',row.names=1)
y=read.csv('Hosts_families4picante_null.csv',row.names=1)
View(y)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
}
}
#write.csv(y,'Hosts_families4picante_atLeast3sources.csv')
write.csv(y,'Hosts_families4picante_atLeast1source.csv')
i
length(x$Tree_label)
as.integer(x$Count.of.Lep_accepted_name[i])
y[x$Lep_accepted_name[i],x$Host_family[i]]
as.integer(x$Count.of.Lep_accepted_name[i])>1
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
}
}
i
as.integer(x$Count.of.Lep_accepted_name[i])>1
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
y=read.csv('Hosts_families4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
}
}
#write.csv(y,'Hosts_families4picante_atLeast3sources.csv')
write.csv(y,'Hosts_families4picante_atLeast1source.csv')
y=as.data.frame(y)
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
y=as.data.frame(sapply(y,as.numeric))
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
y[x$Lep_accepted_name[i],x$Host_family[i]]
y=as.data.frame(sapply(y,as.character))
y[x$Lep_accepted_name[i],x$Host_family[i]]
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
View(y)
y=read.csv('Hosts_families4picante_null.csv',row.names=1,stringsAsFactors = F)
y[x$Lep_accepted_name[i],x$Host_family[i]]=1
x$Lep_accepted_name[i]
x$Host_family[i]
y[as.character(x$Lep_accepted_name[i]),as.character(x$Host_family[i])]=1
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),as.character(x$Host_family[i])]=1
}
}
#write.csv(y,'Hosts_families4picante_atLeast3sources.csv')
write.csv(y,'Hosts_families4picante_atLeast1source.csv')
i
for (i in 712:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),as.character(x$Host_family[i])]=1
}
}
i
for (i in 713:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),as.character(x$Host_family[i])]=1
}
}
write.csv(y,'Hosts_families4picante_atLeast1source.csv')
library(picante)
install.packages("picante")
library(picante)
sptree=read.tree('ALLMB.pruned184sp.family_nam.tre')
host_recs_filtered=read.csv('Hosts_families4picante_atLeast1source.csv',row.names = 1)
pd.filtered.result <- pd(host_recs_filtered, sptree, include.root=TRUE)
write.table(pd.filtered.result,'pd.atLeast1soource.tsv',sep='\t')
y=read.csv('Hosts_families_2sp_per_fam_4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]=1
}
}
i
x=read.csv('Hosts_genus_revised_Sep2.csv')
y=read.csv('Hosts_families_2sp_per_fam_4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]=1
}
}
z=read.table('./misc/result_sum.tsv',sep='\t',header=T)
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
if (y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]==1){
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
}
}
}
i
z$Num.families[i]
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]
is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
if (!is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])){
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
}
}
}
i
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
y=read.csv('Hosts_families_2sp_per_fam_4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]=1
}
}
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
if (!is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])){
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
}
}
}
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]
paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]]
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]][1]
y=read.csv('Hosts_families_2sp_per_fam_4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]=1
}
}
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
if (!is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])){
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]][1],'2',sep='')]=1
}
}
}
i
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]
as.character(x$Lep_accepted_name[i])
paste(x$Host_family[i],'1',sep='')
is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])
is.null(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])
y=read.csv('Hosts_families_2sp_per_fam_4picante_null.csv',row.names=1,stringsAsFactors = F)
for (i in 1:length(x$Tree_label)){
if (as.integer(x$Count.of.Lep_accepted_name[i])>1){
y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')]=1
}
}
#if the butterfly has only one host family, then mark the second species within this family to use crown group age for PD
z=read.table('./misc/result_sum.tsv',sep='\t',header=T)
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
if (!is.null(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])){
if (!is.na(y[as.character(x$Lep_accepted_name[i]),paste(x$Host_family[i],'1',sep='')])){
y[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]][1],'2',sep='')]=1
}
}
}
}
write.csv(y,'Hosts_families_2sp_per_fam_4picante_atLeast1source.csv')
sptree=read.tree('ALLMB.pruned_2spPerFam.family_nam.tre')
host_recs=read.csv('Hosts_families_2sp_per_fam_4picante_atLeast1source.csv',row.names = 1)
host_recs_filtered=read.csv('Hosts_families_2sp_per_fam_4picante_atLeast1source.csv',row.names = 1)
phydist=cophenetic(sptree)
ses.mpd.filtered.result <- ses.mpd(host_recs_filtered, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
write.table(ses.mpd.filtered.result,'mpd.atLeast1source.tsv',sep='\t')
ses.mntd.result <- ses.mntd(host_recs_filtered, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
write.table(ses.mntd.result,'mntd.atLeast1source.tsv',sep='\t')
