itis_name(query = "Vitis vinivera", get = "family")
tax_name(query = "Vitis vinivera", get = "family")
tax_name(query = "Vitis vinifera", get = "family")
tax_name(query = "Vitis vinifera", get = "class")
tax_name(query = "Vigna unguiculata", get = "class")
tax_name(query = "Vigna unguiculata", get = "family")
x=read.csv('~/Downloads/tem',header = F,sep = '\t')
hist(x$V2-x$V1)
x=read.csv('~/tem',header = F,sep = '\t')
x=read.csv('~/Downloads/tem',header = F,sep = '\t')
head(x)
hist(x$V2-x$V1)
x$V3=x$V2-x$V1
View(x)
hist(x$V3)
hist(x$V3[x$V3>0])
hist(x$V3[x$V3>0],breaks = 200)
hist(x$V3[x$V3>0],breaks = 20)
hist(x$V3[x$V3>0],breaks = 50)
hist(x$V3[x$V3>0],breaks = 80)
hist(x$V3[x$V3>0],breaks = 100)
x$V3[x$V3>1000]
x=read.csv('~/Downloads/scaffold1.repeats.range',header = F,sep = '\t')
hist(x$V2-x$V1,breaks = 100)
install.packages("ggplot2")
q()
install.packages("scatterplot3d")
library("scatterplot3d")
x=read.table('~/Downloads/Sap_mito_kmer_GC.txt')
x=read.table('~/Downloads/Sap_mito_kmer_GC.txt',sep='\t')
head(x)
scatterplot3d(x[,2:4])
scatterplot3d(x[,2:4],pch=20,cex=0.5)
scatterplot3d(x[,2:4],pch=20)
scatterplot3d(x[,2:4],pch=20,angle = 55)
scatterplot3d(x[,2:4],pch=20,angle = 15)
scatterplot3d(x[,2:4],pch=20,angle = 85)
scatterplot3d(x[,2:4],pch=20,angle = 85,xlab = 'scaffold length',ylab = 'kmer coverage',zlab = 'GC%')
scatterplot3d(x[,2:4],pch=20,angle = 70,xlab = 'scaffold length',ylab = 'kmer coverage',zlab = 'GC%')
scatterplot3d(x[,2:4],pch=20,angle = 170,xlab = 'scaffold length',ylab = 'kmer coverage',zlab = 'GC%')
scatterplot3d(x[,2:4],pch=20,angle = 200,xlab = 'scaffold length',ylab = 'kmer coverage',zlab = 'GC%')
install.packages("igraph")
library(igraph)
find.package('igraph')
plot(1:45365,1:10,type="n")
plot(1:45365,1:10)
plot(29245,1,x1=36154,y1=1,xlim = c(0,45365),ylim = c(0,10))
segments(29245,1,x1=36154,y1=1,xlim = c(0,45365),ylim = c(0,10))
x=read.table('~/Downloads/plastid.candidate.vs.repeats.blastout')
x=read.table('~/Downloads/plastid.candidate.vs.repeats.blastout',sep='\t')
View(x)
x=read.csv('~/Downloads/plastid.candidate.vs.repeats.blastout',sep='\t')
View(x)
x=read.csv('~/Downloads/plastid.candidate.vs.repeats.blastout',sep='\t',header = F)
View(x)
for (i in 123:349){
}
j=1
for (i in 123:349){
segments(min(X$V7[i],x$V8[i]),j,x1=max(X$V7[i],x$V8[i]),y1=j,xlim = c(0,45365),ylim = c(0,10))
j=j+1
}
for (i in 123:349){
segments(min(x$V7[i],x$V8[i]),j,x1=max(X$V7[i],x$V8[i]),y1=j,xlim = c(0,45365),ylim = c(0,10))
j=j+1
}
min(x$V7[i],x$V8[i])
max(X$V7[i],x$V8[i])
plot(xlim=c(0,45365),ylim = c(0,226))
plot((0,0),xlim=c(0,45365),ylim = c(0,226))
plot(0,0,xlim=c(0,45365),ylim = c(0,226))
for (i in 123:349){
segments(min(x$V7[i],x$V8[i]),j,x1=max(x$V7[i],x$V8[i]),y1=j)
j=j+1
}
x <- x[order(x$V7),]
plot(0,0,xlim=c(0,45365),ylim = c(0,226),pch=20)
for (i in 123:349){
segments(min(x$V7[i],x$V8[i]),j,x1=max(x$V7[i],x$V8[i]),y1=j)
}}}
j=1
for (i in 123:349){
segments(min(x$V7[i],x$V8[i]),j,x1=max(x$V7[i],x$V8[i]),y1=j)
j=j+1
}
x=read.csv('~/Downloads/plastid.candidate.vs.repeats.blastout',sep='\t')
y=x[123:349,]
y <- y[order(y$V7),]
View(y)
x=read.csv('~/Downloads/plastid.candidate.vs.repeats.blastout',sep='\t',header=F)
y <- y[order(y$V7),]
y=x[123:349,]
y <- y[order(y$V7),]
j=1
plot(0,0,xlim=c(0,45365),ylim = c(0,227),pch=20)
for (i in 1:227){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j)
j=j+1
}
segments(39349,10,44000,10,lwd = 3,col = 'red')
y=x[354:407,]
y <- y[order(y$V7),]
j=1
for (i in 1:54){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j,col='blue')
j=j+1
}
y=x[123:349,]
y <- y[order(y$V7),]
plot(0,0,xlim=c(0,45365),ylim = c(0,227),pch=20,xlab='Position on scaffold681',ylab=NULL)
j=1
for (i in 1:227){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j)
j=j+1
}
#rnd-1_family-6#DNA/hAT-Ac
y=x[354:407,]
y <- y[order(y$V7),]
j=1
for (i in 1:54){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j,col='blue')
j=j+1
}
segments(39349,10,44000,10,lwd = 3,col = 'red')
y=x[4:25,]
y <- y[order(y$V7),]
plot(0,0,xlim=c(0,25574),ylim = c(0,110),pch=20,xlab='Position on scaffold2108',ylab=NULL)
j=1
for (i in 1:22){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j)
j=j+1
}
y=x[26:114,]
y <- y[order(y$V7),]
j=1
for (i in 1:89){
segments(min(y$V7[i],y$V8[i]),j,x1=max(y$V7[i],y$V8[i]),y1=j,col = 'blue')
j=j+1
}
segments(248,10,601,10,lwd = 3,col = 'red')
x=read.csv('~/Downloads/F.dS.csv',header = F)
hist(x$V1)
hist(x$V1,xlim = c(0,1))
hist(x$V1,xlim = c(0,1),breaks = 50)
hist(x$V1,xlim = c(0,1),breaks = 100)
hist(x$V1,xlim = c(0,1),breaks = 200)
hist(x$V1,xlim = c(0,1),breaks = 200,xlab = 'dS',main = 'dS distribution of F')
hist(x$V1,xlim = c(0,2),breaks = 200,xlab = 'dS',main = 'dS distribution of F')
hist(x$V1,xlim = c(0,3),breaks = 200,xlab = 'dS',main = 'dS distribution of F')
y=read.csv('~/Downloads/8.dS.csv',header = F)
hist(y$V1,xlim = c(0,3),breaks = 200,xlab = 'dS',main = 'dS distribution of 8')
hist(y$V1,xlim = c(0,1),breaks = 200,xlab = 'dS',main = 'dS distribution of 8')
y=read.csv('~/Downloads/GG84.dS.csv',header = F)
hist(y$V1,xlim = c(0,1),breaks = 200,xlab = 'dS',main = 'dS distribution of GG84')
hist(y$V1,xlim = c(0,3),breaks = 200,xlab = 'dS',main = 'dS distribution of GG84')
y=read.csv('~/Downloads/8.dS.csv',header = F)
hist(y$V1,xlim = c(0,3),breaks = 200,xlab = 'dS',main = 'dS distribution of 8')
install.packages(phytools)
install.packages('phytools')
q()
if (!requireNamespace("BiocManager", quietly=TRUE))
+ install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("pathview")
q()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Sushi")
library(Sushi)
x=read.table('l')
x=read.table('~/Downloads/l')
head(x)
HGT.bed=cbind(x$V1,x$V4,x$V5,x$V9)
View(x)
View(HGT.bed)
HGT.bed=c(x$V1,x$V4,x$V5,x$V9)
HGT.bed=x[,c(1,4,5,9)]
View(HGT.bed)
plotBed(beddata = HGT.bed,chrom = 'scaffold5_19632047
')
plotBed(beddata = HGT.bed,chrom = 'scaffold5_19632047
',chromstart=0)
plotBed(beddata = HGT.bed,chrom = 'scaffold5_19632047
',chromstart=0,chromend=19632047)
colnames
colnames(HGT.bed)=c('chrom','start','end','name')
plotBed(beddata = HGT.bed,chrom = 'scaffold5_19632047
',chromstart=0,chromend=19632047)
plotBed(beddata = HGT.bed,chrom = 'scaffold5_19632047
',chromstart=1,chromend=19632047)
plotBedgraph(HGT.bed,chrom = 'scaffold5_19632047
+ ',chromstart=0,chromend=19632047)
plotBedgraph(HGT.bed,chrom = 'scaffold5_19632047',chromstart=0,chromend=19632047)
View(HGT.bed)
plotBedgraph(HGT.bed,chrom = '',chromstart=0,chromend=19632047)
plotBedgraph(HGT.bed,chrom = 'scaffold5_19632047',chromstart=0,chromend=19632047)
q()
x=read.csv('Downloads/test.txt')
plot(x$X0)
plot(x$X0,pch=20,cex=0.4)
x=read.table('~/Dropbox/Sapria/VGT.stem_crown_br_len_distr.tsv',sep='\t',header = T)
plot(x$stem_gr_len,x$crown2sap_len,xlim = c(0,2),ylim = c(0,2))
plot(x$stem_gr_len,x$crown2sap_len,xlim = c(0,2),ylim = c(0,2).pch=20,cex=0.4)
plot(x$stem_gr_len,x$crown2sap_len,xlim = c(0,2),ylim = c(0,2),pch=20,cex=0.4)
abline(a=0.1,b=1,col='red')
abline(a=0.1,b=1.2,col='red')
z=[x$crown2sap_len>x$stem_gr_len*1.2+0.1 & x$stem_gr_len>0.25,]
z=x[x$crown2sap_len>x$stem_gr_len*1.2+0.1 & x$stem_gr_len>0.25,]
plot(x$crown2sap_len+x$stem_gr_len,x$crown2sap_len,xlim = c(0,2),ylim = c(0,4),pch=20,cex=0.4)
plot(x$crown2sap_len+x$stem_gr_len,x$crown2sap_len,xlim = c(0,4),ylim = c(0,2),pch=20,cex=0.4)
plot(x$crown2sap_len,x$crown2sap_len+x$stem_gr_len,xlim = c(0,4),ylim = c(0,2),pch=20,cex=0.4)
plot(x$stem_gr_len,x$crown2sap_len+x$stem_gr_len,xlim = c(0,4),ylim = c(0,2),pch=20,cex=0.4)
plot(x$stem_gr_len,x$crown2sap_len+x$stem_gr_len,xlim = c(0,2),ylim = c(0,24,pch=20,cex=0.4)
)
plot(x$stem_gr_len,x$crown2sap_len+x$stem_gr_len,xlim = c(0,2),ylim = c(0,4),pch=20,cex=0.4)
abline(a=0.5,b=1,col='red')
z=x[x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1+0.5 & x$stem_gr_len>0.25,]
abline(a=0.5,b=1.2,col='red')
abline(a=0.5,b=1.4,col='red')
z=x[x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1.4+0.5 & x$stem_gr_len>0.25,]
write.csv(z,'test.csv')
View(z)
View(x)
View(z)
z=x[(x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1.4+0.5) && (x$stem_gr_len>0.25),]
z=x[(x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1.4+0.5) & (x$stem_gr_len>0.25),]
View(z)
which((x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1.4+0.5) & (x$stem_gr_len>0.25))
length(which(x$crown2sap_len+x$stem_gr_len>x$stem_gr_len*1.4+0.5) & (x$stem_gr_len>0.25))
z=x[(x$crown2sap_len+x$stem_gr_len<x$stem_gr_len*0.8+0.5) & (x$stem_gr_len>0.5),]
z=x[(x$crown2sap_len<x$stem_gr_len*0.8+0.5) & (x$stem_gr_len>0.5),]
abline(a=0.1,b=0.8,col='red')
abline(a=0,b=0.6,col='red')
abline(a=0,b=0.7,col='red')
z=x[(x$crown2sap_len+x$stem_gr_len<x$stem_gr_len*0.7) & (x$stem_gr_len>0.5),]
z=x[(x$crown2sap_len<x$stem_gr_len*0.7) & (x$stem_gr_len>0.5),]
write.csv(z,'stem_darwinian.csv')
abline(a=0,b=0.75,col='red')
abline(a=0,b=085,col='red')
abline(a=0,b=0.85,col='red')
abline(a=0,b=0.9,col='red')
abline(a=0,b=1,col='red')
z=x[(x$crown2sap_len<x$stem_gr_len) & (x$stem_gr_len>0.15),]
write.csv(z,'test.csv')
q()
x=read.table('~/Dropbox/Sapria/Gene loss/truncated_protein/rafflesiaceae_aa_len.dist',sep='\t')
View(x)
x=read.table('~/Dropbox/Sapria/Gene loss/truncated_protein/rafflesiaceae_aa_len.dist',sep='\t',header = T)
plot(x$longest_sapria...,x$number_adjacent_sap_gene)
plot(x$longest_sapria...,x$number_adjacent_sap_gene,pch=20,xlim = c(0,1.5),ylim = c(0,10))
len(x$ID[x$longest_sapria...<0.75])
length(x$ID[x$longest_sapria...<0.75])
length(x$ID[x$longest_sapria...<0.75 & x$number_adjacent_sap_gene >0])
length(x$ID[x$longest_sapria...>0.75 & x$longest_sapria... <1.25])
length(x$ID[x$longest_sapria...>0.75 & x$longest_sapria... <1.25 &x$number_adjacent_sap_gene >0])
244196254/207*(208+207+172+171+158+161)
1270528336*1.25
1270528336*125
1270528336*125/1e9
6,586,412/1270528336
6586412/1270528336
2139472820/3539712460
2139472820/83539712460
2139472820/83539712460-1
162737/828795
306623728/19248242146
1627375501706
162737/5501706
162737/5501706-1
6586412/1299944392
1601317106/124166709391
43511457/1218492560
43511457/1218492560-1
12729388/1299944392
12729388/1299944392-1
1299944392*125/1e9
1218492560*125/1e9
10^1.5
x=read.csv('Downloads/tem.intron.distr')
plot(density(log(x$X82,10)))
0.75^5
10^2.2
x=c(0,0,4,81)
plot(x)
plot(x,pch=20,cex=0.4,ylim=c(0,100))
e=c(0,0,4,81)
a=c(0,2,7,14)
b=c(0,1,13,32)
c=c(0,28,32,53)
d=c(0,5,14,65)
pdf('fig3_v5.pdf',width = 3,height = 10)
par(mfrow=c(1,5))
plot(a,pch=20,cex=0.4,ylim=c(0,100))
plot(a,pch=20,cex=0.4,ylim=c(0,100))
plot(a,pch=20,cex=0.4,ylim=c(0,100))
dev.off()
pdf('fig3_v5.pdf',width = 5,height = 10)
plot(a,pch=20,cex=0.4,ylim=c(0,100))
par(mfrow=c(1,5))
plot(a,pch=20,cex=0.4,ylim=c(0,100))
plot(b,pch=20,cex=0.4,ylim=c(0,100))
plot(c,pch=20,cex=0.4,ylim=c(0,100))
plot(d,pch=20,cex=0.4,ylim=c(0,100))
plot(e,pch=20,cex=0.4,ylim=c(0,100))
dev.off()
pdf('fig3_v5.pdf',width = 3,height = 10)
par(mfrow=c(5,1))
plot(a,pch=20,cex=0.4,ylim=c(0,100))
plot(b,pch=20,cex=0.4,ylim=c(0,100))
plot(c,pch=20,cex=0.4,ylim=c(0,100))
plot(d,pch=20,cex=0.4,ylim=c(0,100))
plot(e,pch=20,cex=0.4,ylim=c(0,100))
dev.off()
x=read.table("/Users/limingcai/Documents/GitHub/BNet-PD-analysis/result_sum.tsv",header=T)
View(x)
length(x$Tree_label[which(x$Num.families==1)])
898/1356
length(x$Tree_label[which(x$Num.families==1) & x$Lep_family=='Hespariidae'])
length(x$Tree_label[which(x$Num.families==1 & x$Lep_family=='Hespariidae')])
length(x$Tree_label[which(x$Num.families==1 & x$Lep_family=='Hesperiidae')])
length(x$Tree_label[which(x$Num.families==1 && x$Lep_family=='Hesperiidae')])
length(x$Tree_label[which(x$Num.families==1 && x$Tree_label=='Hesperiidae')])
length(x$Tree_label[which(x$Num.families==1 && x$Tree_label=='Hesperiidae')])
length(x$Tree_label[which(x$Tree_label=='Hesperiidae')])
length(x$Tree_label[which(x$Tree_label=='Hesperiidae' && x$Num.families==1)])
length(x$Tree_label[x$Tree_label=='Hesperiidae' && x$Num.families==1])
x$Tree_label=='Hesperiidae' && x$Num.families==1
x[1,]
length(x$Tree_label[which(x$Tree_label=='Hesperiidae')],row.names=F
)
x=read.table("/Users/limingcai/Documents/GitHub/BNet-PD-analysis/result_sum.tsv",header=T,row.names = F)
View(x)
x$Tree_label[x$Num.families==1]
x$PD[x$Num.families==1 && x$Tree_label=='Riodinidae']
x %>% filter(Num.families==1, Tree_label == "Riodinidae")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
x %>% filter(Num.families==1, Tree_label == "Riodinidae")
x %>% filter(Num.families==1, Tree_label == "Riodinidae") %>% y
y< x %>% filter(Num.families==1, Tree_label == "Riodinidae") %>% y
y<- x %>% filter(Num.families==1, Tree_label == "Riodinidae") %>% y
y<- x %>% filter(Num.families==1, Tree_label == "Riodinidae")
y<- x %>% filter(Tree_label == "Riodinidae")
51/76
76-51
mean(y$PD)
y<- x %>% filter(Tree_label == "Hesperiidae")
mean(y$PD)
y<- x %>% filter(Tree_label == "Hesperiidae",Num.families==1)
305/362
y<- x %>% filter(Tree_label == "Hesperiidae")
305/388
88-5
y<- x %>% filter(Tree_label == "Lycaenidae")
mean(y$PD)
289
y<- x %>% filter(Tree_label == "Lycaenidae",Num.families==1)
140/289
289-140
y<- x %>% filter(Tree_label == "Nymphalidae")
mean(y$PD)
442
y<- x %>% filter(Tree_label == "Nymphalidae",Num.families==1)
442-299
299/442
y<- x %>% filter(Tree_label == "Papilionidae")
mean(y$PD)
y<- x %>% filter(Tree_label == "Papilionidae",Num.families==1)
44/65
44-65
y<- x %>% filter(Tree_label == "Pieridae")
mean(y$PD)
y<- x %>% filter(Tree_label == "Pieridae",Num.families==1)
56/93
93-56
y<- x %>% filter(Tree_label == "Riodinidae")
View(y)
setwd('Documents/GitHub/BNet-PD-analysis/')
library(picante)
sptree=read.tree('ALLMB.pruned_2spPerFam.family_nam.tre')
host_recs=read.csv('Hosts_families_2sp_per_fam_4picante_all_recs.csv',row.names = 1)
pd.result <- pd(host_recs[1,], sptree, include.root=TRUE)
pd.result <- pd(host_recs[2,], sptree, include.root=TRUE)
View(pd.result)
for (i in 1:1355){pd.result <- pd(host_recs[i,], sptree, include.root=TRUE)}
i
host_recs[i,]
pd.result <- pd(host_recs[2,], sptree, include.root=TRUE)
sptree=read.tree('ALLMB.pruned_2spPerFam.family_nam.tre')
for (i in 1:1355){pd.result <- pd(host_recs[i,], sptree, include.root=TRUE)}
i
sptree=read.tree('~/Downloads/test.tre')
sptree=read.tree('~/Downloads/test.tre')
sptree=read.tree('~/Downloads/test.tre')
sptree=read.tree('~/Downloads/test2.tre')
sptree=read.tree('~/Downloads/test1.tre')
plot(sptree)
for (i in 1:1355){pd.result <- pd(host_recs[i,], sptree, include.root=TRUE)}
sptree=read.tree('~/Downloads/test2.tre')
for (i in 1:1355){pd.result <- pd(host_recs[i,], sptree, include.root=TRUE)}
i
host_recs[i]
host_recs[i,]
sptree=read.tree('~/Downloads/test2.tre')
for (i in 1:1355){pd.result <- pd(host_recs[i,], sptree, include.root=TRUE)}
pd.result <- pd(host_recs, sptree, include.root=TRUE)
phydist=cophenetic(sptree)
ses.mpd.result <- ses.mpd(host_recs, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
write.table(ses.mpd.result,'mpd.allRecs.tsv',sep='\t')
View(ses.mpd.result)
z=read.table('result_sum.tsv',sep='\t',header=T)
i=1
z$Num.families[i]==1
host_recs[as.character(z$Lep_accepted_name[i]),paste(z$Host_family[i],'2',sep='')]
as.character(z$Lep_accepted_name[i])
paste(z$Host_family[i],'2',sep='')
z$Host_family[i]
View(z)
which(host_recs[1,]==1)
x=read.csv('Hosts_genus_revised_Sep2.csv')
i=1
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]]
z$Lep_accepted_name[i]
x[i]
View(x)
x[i,]
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]]
paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')
for (i in 1:length(host_recs$Tree_label)){
if (z$Num.families[i]==1){
host_recs[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
}
}
i
View(host_recs)
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
host_recs[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]],'2',sep='')]=1
}
}
i
z$Num.families[i]
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]]
x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]][1]
for (i in 1:length(z$Tree_label)){
if (z$Num.families[i]==1){
host_recs[as.character(z$Lep_accepted_name[i]),paste(x$Host_family[x$Lep_accepted_name==z$Lep_accepted_name[i]][1],'2',sep='')]=1
}
}
ses.mpd.result <- ses.mpd(host_recs, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
write.csv(host_recs,'Hosts_families_2sp_per_fam_4picante_all_recs_backup.csv')
host_recs=read.csv('Hosts_families_2sp_per_fam_4picante_all_recs_backup.csv')
host_recs=read.csv('Hosts_families_2sp_per_fam_4picante_all_recs_backup.csv',,row.names = 1)
View(host_recs)
ses.mpd.result <- ses.mpd(host_recs, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
View(ses.mpd.result)
write.table(ses.mpd.result,'mpd.allRecs.tsv',sep='\t')
ses.mntd.result <- ses.mntd(host_recs, phydist, null.model = "taxa.labels",abundance.weighted = FALSE, runs = 99)
View(ses.mntd.result)
write.table(ses.mntd.result,'mntd.allRecs.tsv',sep='\t')
library(ggtree)
install.packages("ggtree")
library(ggtree)
library(ggplot2)
library(reshape)
library(gridExtra)
x=read.table('results_sum_new_mpd_mntd.tsv',header=T,sep = '\t')
a=melt(x[,c('Lep_family','Lep_accepted_name','Num.families')])
b=melt(x[,c('Lep_family','Lep_accepted_name','PD')])
c=melt(x[,c('Lep_family','Lep_accepted_name','mpd.obs','mntd.obs')])
d=melt(x[,c('Lep_family','Lep_accepted_name','mpd.obs.z','mntd.obs.z')])
p1=ggplot(a, aes(x=Lep_family, y=value))+geom_violin(trim = FALSE)+
labs(x=NULL, y = "Plant family number",main='Host plant richness')+
theme(axis.text=element_text(size=7,angle = 30))
p2=ggplot(b, aes(x=Lep_family, y=value))+geom_boxplot()+
labs(x=NULL, y = "PD",main='Host plant richness')+
theme(axis.text=element_text(size=7,angle = 30))
p3=ggplot(c, aes(x=Lep_family, y=value,color=variable))+geom_boxplot(aes(color = variable))+
labs(x=NULL, y = "MPD/MNTD",main='Host plant divergence')
p4=ggplot(d, aes(x=Lep_family, y=value,color=variable))+geom_boxplot(aes(color = variable))+
labs(x=NULL, y = "DSI",main='Host plant divergence')
pdf('PD_analysis_new_mpd_mntd.pdf',width = 8,height = 6)
grid.arrange(p1,p2,p3,p4,
widths = c(1, 1),
layout_matrix = rbind(c(1, 2),c(3, 3),c(4,4))
)
dev.off()
ggplot(c, aes(x=Lep_family, y=value,color=variable))+violin(trim = FALSE, aes(color = variable))+
labs(x=NULL, y = "MPD/MNTD",main='Host plant divergence')
ggplot(c, aes(x=Lep_family, y=value,color=variable))+geom_violin(trim = FALSE, aes(color = variable))+
labs(x=NULL, y = "MPD/MNTD",main='Host plant divergence')
p1=ggplot(a, aes(x=Lep_family, y=value))+geom_violin(trim = FALSE)+
labs(x=NULL, y = "Plant family number",main='Host plant richness')+
theme(axis.text=element_text(size=7,angle = 30))
p2=ggplot(b, aes(x=Lep_family, y=value))+geom_boxplot()+
labs(x=NULL, y = "PD",main='Host plant richness')+
theme(axis.text=element_text(size=7,angle = 30))
p3=ggplot(c, aes(x=Lep_family, y=value,color=variable))+geom_violin(trim = FALSE, aes(color = variable))+
labs(x=NULL, y = "MPD/MNTD",main='Host plant divergence')
p4=ggplot(d, aes(x=Lep_family, y=value,color=variable))+geom_violin(trim = FALSE, aes(color = variable))+
labs(x=NULL, y = "DSI",main='Host plant divergence')
pdf('PD_analysis_new_mpd_mntd.pdf',width = 8,height = 6)
grid.arrange(p1,p2,p3,p4,
widths = c(1, 1),
layout_matrix = rbind(c(1, 2),c(3, 3),c(4,4))
)
dev.off()
ggplot(c, aes(x=Lep_family, y=value,color=variable))+geom_violin(aes(color = variable))+
labs(x=NULL, y = "MPD/MNTD",main='Host plant divergence')
q()
